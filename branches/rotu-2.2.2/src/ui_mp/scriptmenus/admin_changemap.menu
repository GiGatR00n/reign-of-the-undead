#include "ui/menudef.h"
#include "ui_mp/common_macro.inc"

#define CHOICE_X_START          170
#define CHOICE_Y_START          -115 // controls where choice start from top left corner

#define PLAYER_INFO_X           5
#define PLAYER_INFO_Y           64 //145

/*#undef CHOICE_SIZE_X
#define CHOICE_SIZE_X           50


#undef CHOICE_X_SPACING
#define CHOICE_X_SPACING        250*/

#define CHOICE_GROUP            "cmds"

#define CHOICE_SEP_1            15       // separator appears after item 2

#include "ui_mp/menustyle.inc"
#include "ui/choices_setup_common.menu"

{
    menuDef
    {
        name            "admin_changemap"
        fullscreen      0
        rect            0 0 640 480
        focuscolor      COLOR_FOCUSED
        style           WINDOW_STYLE_EMPTY
        blurWorld       0.1
        border          0
        legacySplitScreenScale

        onOpen          { exec "set admin_submenu changemap"; scriptMenuResponse "admin_open_changemap";}
        onEsc           { scriptMenuResponse "admin_changemap_cancel"; close self; }
        onClose         {}

        CHOICE_SEPARATOR_VIS( CHOICE_SEP_1, 1 )
        CHOICE_BUTTON_VIS( 16, "Backspace", scriptMenuResponse "admin_changemap_backspace";, when(dvarString("admin_submenu")=="changemap")  )
        CHOICE_BUTTON_VIS( 17, "Accept Map", scriptMenuResponse "admin_changemap_accept"; close self;, when((dvarString("admin_submenu")=="changemap") && (dvarint(filterResultCount)==1)))
        CHOICE_DBUTTON_VIS( 17, "Accept Map", when((dvarString("admin_submenu")=="changemap") && (dvarint(filterResultCount)!=1))  )
        CHOICE_BUTTON_VIS( 18, "Cancel", scriptMenuResponse "admin_changemap_cancel"; close admin_changemap;, when(dvarString("admin_submenu")=="changemap") )

        itemDef
        {
            name        instructions
            rect        180 148 223 95 CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN // 250
            exp         text(" Type a few sequential characters. When\n one map remains, click 'Accept Map'. Click\n 'Backspace' to remove the last character.\n Key substitutions:\n        '^2=^7' for '^1space^7',    '^2.^7' for '^1_^7',    '^2[^7' for '^1(^7',    '^2]^7' for '^1)^7'")
            style       0
            textscale   .30
            textalign   ITEM_ALIGN_LEFT
            textaligny  16
            style       WINDOW_STYLE_FILLED
            backcolor   0 0 0 .3
            visible     1
        }
        itemDef
        {
            exp             text("Filter: ")
            style           0
            decoration
            textscale       .30
            origin          180 220
            textalign       ITEM_ALIGN_RIGHT
            textaligny      16
            visible         1
        }
        itemDef
        {
            exp             text("^2" + dvarString("admin_changemap_filter"))
            style           0
            decoration
            textscale       .30
            origin          180 220
            textalign       ITEM_ALIGN_LEFT
            textaligny      16
            visible         1
        }
        itemDef
        {
            exp             text( "^2" + dvarString("admin_matching_maps1"))
            style           0
            decoration
            textscale       .3
            origin          320 10
            textalign       ITEM_ALIGN_LEFT
            textaligny      16
            visible         1
        }
        itemDef
        {
            exp             text( "^2" + dvarString("admin_matching_maps2"))
            style           0
            decoration
            textscale       .3
            origin          320 140
            textalign       ITEM_ALIGN_LEFT
            textaligny      16
            visible         1
        }
        itemDef
        {
            exp             text( "^2" + dvarString("admin_matching_maps3"))
            style           0
            decoration
            textscale       .3
            origin          320 270
            textalign       ITEM_ALIGN_LEFT
            textaligny      16
            visible         1
        }

        execKey "0" { scriptMenuResponse "filter:0" }
        execKey "1" { scriptMenuResponse "filter:1" }
        execKey "2" { scriptMenuResponse "filter:2" }
        execKey "3" { scriptMenuResponse "filter:3" }
        execKey "4" { scriptMenuResponse "filter:4" }
        execKey "5" { scriptMenuResponse "filter:5" }
        execKey "6" { scriptMenuResponse "filter:6" }
        execKey "7" { scriptMenuResponse "filter:7" }
        execKey "8" { scriptMenuResponse "filter:8" }
        execKey "9" { scriptMenuResponse "filter:9" }
        execKey "a" { scriptMenuResponse "filter:a" }
        execKey "b" { scriptMenuResponse "filter:b" }
        execKey "c" { scriptMenuResponse "filter:c" }
        execKey "d" { scriptMenuResponse "filter:d" }
        execKey "e" { scriptMenuResponse "filter:e" }
        execKey "f" { scriptMenuResponse "filter:f" }
        execKey "g" { scriptMenuResponse "filter:g" }
        execKey "h" { scriptMenuResponse "filter:h" }
        execKey "i" { scriptMenuResponse "filter:i" }
        execKey "j" { scriptMenuResponse "filter:j" }
        execKey "k" { scriptMenuResponse "filter:k" }
        execKey "l" { scriptMenuResponse "filter:l" }
        execKey "m" { scriptMenuResponse "filter:m" }
        execKey "n" { scriptMenuResponse "filter:n" }
        execKey "o" { scriptMenuResponse "filter:o" }
        execKey "p" { scriptMenuResponse "filter:p" }
        execKey "q" { scriptMenuResponse "filter:q" }
        execKey "r" { scriptMenuResponse "filter:r" }
        execKey "s" { scriptMenuResponse "filter:s" }
        execKey "t" { scriptMenuResponse "filter:t" }
        execKey "u" { scriptMenuResponse "filter:u" }
        execKey "v" { scriptMenuResponse "filter:v" }
        execKey "w" { scriptMenuResponse "filter:w" }
        execKey "x" { scriptMenuResponse "filter:x" }
        execKey "y" { scriptMenuResponse "filter:y" }
        execKey "z" { scriptMenuResponse "filter:z" }
        execKey "[" { scriptMenuResponse "filter:[" } // use lbracket for lparens
        execKey "]" { scriptMenuResponse "filter:]" } // use rbracket for rparens
        execKey "'" { scriptMenuResponse "filter:'" }
        execKey "," { scriptMenuResponse "filter:," }
        execKey "." { scriptMenuResponse "filter:." } // use dot for underscore
        execKey "/" { scriptMenuResponse "filter:/" }
        execKey "=" { scriptMenuResponse "filter:space" }  // use equals for space


        // For script
/*        execKey "-" { scriptMenuResponse "send" }  // send
        execKey "=" { scriptMenuResponse "space" }  // space
        execKey ";" { scriptMenuResponse "undo" }  // undo*/
    }
}
